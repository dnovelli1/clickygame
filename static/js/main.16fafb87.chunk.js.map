{"version":3,"sources":["components/Navbar/index.js","components/DogCard/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","style","fontWeight","status","total","topscore","DogCard","height","marginTop","alt","name","src","image","onClick","checkImage","id","App","state","dogs","allClicked","score","topScore","count","max","clicked","console","log","includes","setState","push","length","shuffleArr","newArr","sort","Math","random","this","map","dog","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g3EAeeA,MAbf,SAAgBC,GACZ,OACI,sBAAKC,UAAU,SAAf,UACI,oBAAIC,MAAO,CAACC,WAAY,UAAxB,yBACA,6BAAKH,EAAMI,SACX,sBAAKH,UAAU,QAAf,UACI,yCAAYD,EAAMK,SAClB,6CAAgBL,EAAMM,mB,aCEvBC,MARf,SAAiBP,GACb,OACI,qBAAKC,UAAU,OAAf,SACI,qBAAKA,UAAU,UAAUC,MAAQ,CAACM,OAAQ,IAAKC,UAAW,GAAIC,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,MAAOC,QAAS,kBAAMd,EAAMe,WAAWf,EAAMgB,MAAUhB,EAAMgB,OCoGpJC,E,4MAlGbC,MAAQ,CACNC,KAAMA,EACNC,WAAY,GACZC,MAAO,EACPC,SAAU,EACVC,MAAO,EACPC,IAAK,GACLpB,OAAQ,4B,EAGVW,WAAa,SAAAU,GAEXC,QAAQC,IAAIF,GACZ,IAAIL,EAAa,EAAKF,MAAME,WAEzBA,EAAWQ,SAASH,GAClB,EAAKP,MAAMK,MAAQ,EAAKL,MAAMI,SAC/B,EAAKO,SAAS,CACZT,WAAY,GACZC,MAAO,EACPC,SAAU,EAAKJ,MAAMK,MACrBA,MAAO,EACPnB,OAAQ,oBAGR,EAAKyB,SAAS,CACZT,WAAY,GACZC,MAAO,EACPE,MAAO,EACPnB,OAAQ,eAKZgB,EAAWU,KAAKL,GAChB,EAAKI,SAAS,CACZN,MAAO,EAAKL,MAAMK,MAAQ,IAEzB,EAAKL,MAAMK,MAAQ,EAAKL,MAAMI,UAC/B,EAAKO,SAAS,CACZvB,SAAU,EAAKY,MAAMK,QAGA,KAAtBH,EAAWW,QAUd,EAAKF,SAAS,CACZT,aACAC,MAAOD,EAAWW,SAGxBL,QAAQC,IAAI,EAAKT,MAAMG,OACvB,EAAKW,cAfC,EAAKH,SAAS,CACZvB,SAAU,EAAKY,MAAMK,MACrBF,MAAO,EACPE,MAAO,EACPH,WAAY,GACZhB,OAAQ,0B,EAelB4B,WAAa,WACX,IAAMC,EAAM,YAAO,EAAKf,MAAMC,MAC9Bc,EAAOC,MAAK,kBAAMC,KAAKC,SAAW,MAClC,EAAKP,SAAS,CACZV,KAAMc,K,4CAIV,WAAU,IAAD,OACP,OAEE,sBAAKhC,UAAU,UAAf,UACE,cAAC,EAAD,CACEI,MAAOgC,KAAKnB,MAAMG,MAClBf,SAAU+B,KAAKnB,MAAMI,SACrBlB,OAAQiC,KAAKnB,MAAMd,SAGrB,sBAAMH,UAAU,YAAhB,SACGoC,KAAKnB,MAAMC,KAAKmB,KAAI,SAAAC,GAAG,OACtB,cAAC,EAAD,CACExB,WAAY,EAAKA,WACjBC,GAAIuB,EAAIvB,GAERL,KAAM4B,EAAI5B,KACVE,MAAO0B,EAAI1B,OAFN0B,EAAIvB,gB,GAxFLwB,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.16fafb87.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <h3 style={{fontWeight: 'bolder'}}>Clicky Doge</h3>\r\n            <h2>{props.status}</h2>\r\n            <div className=\"score\">\r\n                <h3>Score: {props.total}</h3>\r\n                <h3>Top Score: {props.topscore}</h3>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction DogCard(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"content\" style={ {height: 150, marginTop: 5 }}alt={props.name} src={props.image} onClick={() => props.checkImage(props.id)} key={props.id}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DogCard;","import './App.css';\nimport React, { Component } from 'react';\nimport Navbar from './components/Navbar';\n// import Hero from './components/Hero';\nimport dogs from './Dogs.json';\nimport DogCard from './components/DogCard';\n\nclass App extends Component {\n  state = {\n    dogs: dogs,\n    allClicked: [],\n    score: 0,\n    topScore: 0,\n    count: 1,\n    max: 12,\n    status: 'Click an image to begin!'\n  }\n\n  checkImage = clicked => {\n    // event.preventDefault();\n    console.log(clicked);\n    let allClicked = this.state.allClicked;\n\n    if(allClicked.includes(clicked)) {\n      if(this.state.count > this.state.topScore) {\n        this.setState({\n          allClicked: [],\n          score: 0,\n          topScore: this.state.count,\n          count: 0,\n          status: 'New High Score!'\n        })\n      } else {\n          this.setState({\n            allClicked: [],\n            score: 0,\n            count: 0,\n            status: 'You lose!'\n        })\n      }\n      return;\n    } else {\n        allClicked.push(clicked)\n        this.setState({\n          count: this.state.count + 1\n        });\n        if(this.state.count > this.state.topScore) {\n          this.setState({\n            topscore: this.state.count\n          });\n        }\n        if(allClicked.length === 12) {\n          this.setState({\n            topscore: this.state.count,\n            score: 0,\n            count: 0,\n            allClicked: [],\n            status: 'Sheesh you are good'\n          });\n          return;\n        }\n        this.setState({\n          allClicked,\n          score: allClicked.length,\n        })\n    }\n    console.log(this.state.score);\n    this.shuffleArr();\n  }\n\n\n  \n  shuffleArr = () => {\n    const newArr = [...this.state.dogs];\n    newArr.sort(() => Math.random() - 0.5);\n    this.setState({\n      dogs: newArr\n    })\n  };\n\n  render() {\n    return (\n\n      <div className=\"wrapper\">\n        <Navbar\n          total={this.state.score}\n          topscore={this.state.topScore}\n          status={this.state.status}\n        />\n        {/* <Hero /> */}\n        <main className=\"container\">\n          {this.state.dogs.map(dog => (\n            <DogCard\n              checkImage={this.checkImage}\n              id={dog.id}\n              key={dog.id}\n              name={dog.name}\n              image={dog.image}\n            />\n          ))}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}